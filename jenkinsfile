pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'myapp'
        DOCKER_TAG = "latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/SanjaiKumar2311/jenkins.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").inside {
                        sh 'npm test' // Replace with your app's test command
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    // Ensure no container with the same name is already running
                    sh "docker ps -q -f name=myapp | xargs -r docker stop && docker rm -f myapp"
                    
                    // Deploy the app container
                    sh "docker run -d --name myapp -p 80:80 ${DOCKER_IMAGE}:${DOCKER_TAG}" // Adjust port and options as needed
                }
            }
        }
    }

    post {
        always {
            script {
                // Clean up running containers
                sh "docker ps -q -f name=myapp | xargs -r docker stop && docker rm -f myapp"

                // Clean up Docker image
                sh "docker rmi ${DOCKER_IMAGE}:${DOCKER_TAG} || true" // Using `|| true` to ensure the pipeline doesn't fail if the image was already removed
            }
        }
    }
}
